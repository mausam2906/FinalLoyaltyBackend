{
    "swagger": "2.0",
    "info": {
       "description": "Loyalty Program using Blockchain",
       "version": "1.0.0",
       "title": "Loyalty Program using Blockchain",
       "contact": {
          "email": "mausam2906@gmail.com"
       }
    },
    "host": "https://loyalty-program-backend.herokuapp.com/",
    "basePath": "/v2",
    "tags": [
       {
          "name": "company",
          "description": "Operations about company"
       },
       {
          "name": "user",
          "description": "Operations about user"
       }
    ],
    "schemes": [
       "https",
       "http"
    ],
    "paths": {
       "/user": {
          "post": {
             "tags": [
                "user"
             ],
             "summary": "Create user",
             "description": "This can only be done by the logged in user.",
             "operationId": "createUser",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [
                {
                   "in": "body",
                   "name": "body",
                   "description": "Created user object",
                   "required": true,
                   "schema": {
                      "$ref": "#/definitions/User"
                   }
                }
             ],
             "responses": {
                "default": {
                   "description": "successful operation"
                }
             }
          }
       },
       "/user/login": {
          "get": {
             "tags": [
                "user"
             ],
             "summary": "Logs user into the system",
             "description": "",
             "operationId": "loginUser",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [
                {
                   "name": "email",
                   "in": "query",
                   "description": "The user email for login",
                   "required": true,
                   "type": "string"
                },
                {
                   "name": "password",
                   "in": "query",
                   "description": "The password for login in clear text",
                   "required": true,
                   "type": "string"
                }
             ],
             "responses": {
                "200": {
                   "description": "successful operation",
                   "schema": {
                      "type": "string"
                   },
                   "headers": {
                      "X-Rate-Limit": {
                         "type": "integer",
                         "format": "int32",
                         "description": "calls per hour allowed by the user"
                      },
                      "X-Expires-After": {
                         "type": "string",
                         "format": "date-time",
                         "description": "date in UTC when token expires"
                      }
                   }
                },
                "400": {
                   "description": "Invalid email/password supplied"
                }
             }
          }
       },
       "/user/logout": {
          "get": {
             "tags": [
                "user"
             ],
             "summary": "Logs out current logged in user session",
             "description": "",
             "operationId": "logoutUser",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [],
             "responses": {
                "default": {
                   "description": "successful operation"
                }
             }
          }
       },
       "/user/exchangerate": {
          "get": {
             "tags": [
                "user"
             ],
             "summary": "Check exchange rates",
             "description": "Get exchange rates",
             "operationId": "exchange",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [
                {
                   "name": "companyname",
                   "in": "query",
                   "description": "Company name which you want to deposit",
                   "required": true,
                   "type": "string"
                }
             ],
             "responses": {
                "default": {
                   "description": "successful operation"
                }
             }
          }
       },
       "/user/transactionhistory": {
          "get": {
             "tags": [
                "user"
             ],
             "summary": "Check user's transaction history",
             "description": "Get user's history",
             "operationId": "history",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [],
             "responses": {
                "default": {
                   "description": "successful operation"
                }
             }
          }
       },
       "/user/{email}": {
          "get": {
             "tags": [
                "user"
             ],
             "summary": "Get user by user name",
             "description": "",
             "operationId": "getUserByName",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [
                {
                   "name": "email",
                   "in": "path",
                   "description": "The name that needs to be fetched. Use user1 for testing. ",
                   "required": true,
                   "type": "string"
                }
             ],
             "responses": {
                "200": {
                   "description": "successful operation",
                   "schema": {
                      "$ref": "#/definitions/User"
                   }
                },
                "400": {
                   "description": "Invalid username supplied"
                },
                "404": {
                   "description": "User not found"
                }
             }
          },
          "delete": {
             "tags": [
                "user"
             ],
             "summary": "Delete user",
             "description": "This can only be done by the logged in user.",
             "operationId": "deleteUser",
             "produces": [
                "application/xml",
                "application/json"
             ],
             "parameters": [
                {
                   "name": "email",
                   "in": "path",
                   "description": "The name that needs to be deleted",
                   "required": true,
                   "type": "string"
                }
             ],
             "responses": {
                "400": {
                   "description": "Invalid username supplied"
                },
                "404": {
                   "description": "User not found"
                }
             }
          }
       }
    },
    "definitions": {
       "Category": {
          "type": "object",
          "properties": {
             "id": {
                "type": "integer",
                "format": "int64"
             },
             "name": {
                "type": "string"
             }
          },
          "xml": {
             "name": "Category"
          }
       },
       "User": {
          "type": "object",
          "properties": {
             "name": {
                "type": "string"
             },
             "email": {
                "type": "string"
             },
             "companyname": {
                "type": "string"
             },
             "password": {
                "type": "string"
             },
             "country": {
                "type": "string"
             },
             "date_of_birth": {
                "type": "string"
             }
          },
          "xml": {
             "name": "User"
          }
       },
       "Tag": {
          "type": "object",
          "properties": {
             "id": {
                "type": "integer",
                "format": "int64"
             },
             "name": {
                "type": "string"
             }
          },
          "xml": {
             "name": "Tag"
          }
       },
       "ApiResponse": {
          "type": "object",
          "properties": {
             "code": {
                "type": "integer",
                "format": "int32"
             },
             "type": {
                "type": "string"
             },
             "message": {
                "type": "string"
             }
          }
       }
    },
    "externalDocs": {
       "description": "Find out more about Swagger",
       "url": "http://swagger.io"
    }
 }